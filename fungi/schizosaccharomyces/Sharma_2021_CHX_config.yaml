provenance:
  yaml authors:
  - author: Eleanor Donohoe
    email: s2249175@ed.ac.uk
  date run: 2022-05-??
  riboviz-version: 2.1 | COMMIT ??
  GEO: GSE136940
  reference: Humans and other commonly used model organisms are resistant to cycloheximide-mediated biases in ribosome profiling experiments, Sharma et al., (2021). 
  DOI: https://doi.org/10.1038/s41467-021-25411-y
  notes: S. pombe dataset from Sharma et al., (2021) using CHX

adapters: TGGAATTCTCGGGTGCCAAGG # Illumina sequencing adapter(s) to remove
aligner: hisat2 # Short read aligner to use. Currently only hisat2 works
asite_disp_length_file: data/yeast_standard_asite_disp_length.txt # Table of fixed A-site positions by read length
buffer: 250 # Length of flanking region around the CDS
build_indices: true # Build indices for aligner? if TRUE, remake indices from fasta files
cmd_file: run_S-Sp_2021.sh # Bash commands file
codon_positions_file: null # Codon positions in each gene
count_reads: true # Scan input, temporary and output files and produce counts of reads in each FASTQ, SAM, and BAM file processed?
count_threshold: 64 # Remove genes with a read count below this threshold, when generating statistics and figures
dataset: S-Sp_2021 # Dataset name
dedup_stats: false # Output UMI deduplication statistics?
dedup_umis: false # Extract UMIs and deduplicate reads if TRUE
dir_in: I-Sp_2021/input # Input directory
dir_index: I-Sp_2021/index # Built indices directory
dir_logs: I-Sp_2021/logs # Log files directory
dir_out: I-Sp_2021/output # Output directory
dir_tmp: I-Sp_2021/tmp # Intermediate files directory
do_pos_sp_nt_freq: true # Calculate position-specific nucleotide frequency?
extract_umis: true # Extract UMIs if TRUE
fq_files: # fastq files to be processed, relative to dir_in
  SacPom_plus_plus_1: SRR10072586.fastq.gz #GSM4062103: SacPom_plus_plus_1
  SacPom_plus_plus_1: SRR10072587.fastq.gz #GSM4062104: SacPom_plus_plus_1
group_umis: false # Summarise UMI groups before and after deduplication, if TRUE
is_riboviz_gff: true # Does the GFF file contain 3 elements per gene - UTR5, CDS, and UTR3
is_test_run: false # Is this a test run
make_bedgraph: true # Output bedgraph files, as TSV, in addition to h5?
max_read_length: 50 # Maximum read length in H5 output
min_read_length: 10 # Minimum read length in H5 output
multiplex_fq_files: null # Multiplexed fastq files to be processed, relative to dir_in
num_processes: 16 # Number of processes to parallelize over
orf_fasta_file: ../../riboviz/example-datasets/fungi/schizosaccharomyces/annotation/Schizosaccharomyces_pombe_CDS_w_250utrs.fasta # ORF file to align to
orf_gff_file: ../../riboviz/example-datasets/fungi/schizosaccharomyces/annotation/Schizosaccharomyces_pombe_CDS_w_250utrs.gff3 # GFF2/GFF3 file for ORFs
orf_index_prefix: yeast_CDS_w_250 # ORF index file prefix, relative to dir_index
primary_id: Name # Primary gene IDs to access the data (YAL001C, YAL003W, etc.)
publish_index_tmp: FALSE
rpf: true # Is the dataset an RPF or mRNA dataset?
rrna_fasta_file: ../../riboviz/example-datasets/fungi/schizosaccharomyces/contaminants/schizosaccharomyces_pombe_972h-_rRNA.fasta # rRNA file to avoid aligning to
rrna_index_prefix: yeast_rRNA # rRNA index file prefix, relative to dir_index
sample_sheet: null # Sample sheet, TSV file with, at least, SampleID and TagRead (barcode) columns
secondary_id: null # Secondary gene IDs to access the data (COX1, EFB1, etc.)
stop_in_cds: false # Are stop codons part of the CDS annotations in GFF?
t_rna_file: null # tRNA estimates
umi_regexp: ^(?P<umi_1>.{3}).+(?P<umi_2>.{4})$ # UMI-tools-compliant regular expression to extract UMIs
validate_only: FALSE
